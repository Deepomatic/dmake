dmake_version: 0.1
app_name: dmake-test

docker:
  base_image:
    - &base
      name: dmake-test-worker-base
      variant: ubuntu-1804
      root_image: ubuntu:18.04
      raw_root_image: true
      install_scripts:
        - deploy/base/build/install.sh
    - <<: *base
      variant: ubuntu-2004
      root_image: ubuntu:20.04

env:
  default:
    variables:
      AMQP_URL: amqp://user:password@test-rabbitmq/dev
      ENV_OVERRIDE_TEST1: from_root_env
      ENV_OVERRIDE_TEST2: from_root_env
      ENV_OVERRIDE_TEST3: from_root_env
  branches:
    master:
      variables:
        AMQP_URL: amqp://user:password@test-rabbitmq/dev

docker_links:
  - image_name: rabbitmq:3.9
    link_name: test-rabbitmq
    probe_ports:
      - 5672/tcp
    volumes:
      - shared_rabbitmq_var_lib:/var/lib/rabbitmq
    testing_options: -e RABBITMQ_DEFAULT_VHOST=dev
    env:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password

services:
  - service_name: test-worker2
    config:
      docker_image: ubuntu:20.04
    tests:
      commands:
        - echo 'OK'
  - service_name: test-worker
    needed_links:
      - test-rabbitmq
    dev:
      entrypoint: deploy/base/run/dev-entrypoint.sh
    config:
      docker_image:
        name: dmake-test-worker
        base_image_variant:
          - ubuntu-1804
          - ubuntu-2004
        source_directories_additional_contexts:
          - ../web
        build:
          context: ../  # limited to worker/ and web/, see ../.dockerignore
          dockerfile: worker/deploy/worker/build/Dockerfile
          args:
            BUILD_HOSTNAME: ${HOSTNAME}
          labels:
            vendor: "deepomatic"
            com.deepomatic.version.is-on-premises: "false"
            build-host: "${HOSTNAME}"
          target: runtime
      ports:
        - container_port: 8001
          host_port: 9001
      env_override:
        ENV_OVERRIDE_TEST2: from_env_override
        ENV_OVERRIDE_TEST3: from_env_override
        ENV_OVERRIDE_TEST4: from_env_override
      volumes:
        - source: shared_rabbitmq_var_lib
          target: /var/lib/rabbitmq
        - shared_volume_web_and_workers:/shared_volume
    tests:
      commands:
        # test env override
        - test "${ENV_OVERRIDE_TEST1}" = from_root_env
        - test "${ENV_OVERRIDE_TEST2}" = from_env_override
        - test "${ENV_OVERRIDE_TEST3}" = from_env_override
        - test "${ENV_OVERRIDE_TEST4}" = from_env_override
        - test -z "${ENV_OVERRIDE_TEST5+x}" # should not be set (defined in needed_service.env that should not apply to service test
        - ./deploy/worker/run/test-shared-volumes.sh
        - ./bin/worker_test
      timeout: 30
